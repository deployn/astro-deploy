---
import { Image } from 'astro:assets';
import { ModeToggle } from '@/components/ModeToggle';
import HeaderLink from './HeaderLink.astro';
import { Icon } from 'astro-icon/components';

import logoImage from '@/assets/images/logo.png';

const navLinks = [
	{ href: '/', label: 'Home', icon: 'line-md:home' },
	{ href: '/blog/', label: 'Blog', icon: 'line-md:document-list' },
	{ href: '/recipes/', label: 'Recipes', icon: 'line-md:clipboard-list' },
];

const getThemePreference = () => {
	if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
		return localStorage.getItem('theme');
	}
	return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
};

const setTheme = (document: Document) => {
	const theme = getThemePreference();
	document.documentElement.setAttribute('data-theme', theme ?? '');
	document.documentElement.classList.toggle('dark', theme === 'dark');
};
---

<script define:vars={{ setTheme }} is:inline>
	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList.toggle('dark', isDark);

	if (typeof localStorage !== 'undefined') {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains('dark');
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
		});
		observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
	}

	setTheme(document);

	document.addEventListener('astro:before-swap', (ev) => {
		setTheme(ev.newDocument);
	});
</script>

<header
	class="sticky top-0 z-10 block h-16 w-full max-w-full rounded-none border border-white/80 bg-opacity-80 px-4 text-black shadow-md backdrop-blur-2xl backdrop-saturate-200 dark:border-black/80 dark:bg-zinc-900 lg:px-8">
	<div class="flex h-full items-center justify-between text-zinc-900 dark:text-zinc-100">
		<button id="navToggle" class="hidden sm:block md:hidden" aria-label="Toggle navigation">
			<Icon name="line-md:menu" class="h-6 w-6" />
		</button>
		<a
			href="/"
			class="mr-4 block cursor-pointer py-1.5 font-sans text-base font-semibold leading-relaxed text-inherit antialiased lg:ml-2">
			<div class="flex items-center gap-2 lg:gap-4">
				<Image src={logoImage} alt="Astro Deploy" class="size-10 lg:size-14" loading="eager" />
				<span class="hidden sm:inline">Astro Deploy</span>
			</div>
		</a>
		<nav class="hidden items-center space-x-4 md:flex">
			{
				navLinks.map(({ href, label }) => (
					<HeaderLink
						href={href}
						class="block rounded-lg px-4 py-2 text-center font-sans text-sm leading-normal text-zinc-900 antialiased transition-all hover:bg-zinc-50 dark:text-zinc-100 dark:hover:bg-zinc-950 md:text-xl">
						{label}
					</HeaderLink>
				))
			}
		</nav>
		<div class="flex items-center">
			<ModeToggle client:load />
		</div>
	</div>
</header>

<!-- Navigation Rail -->
<nav
	id="navRail"
	class="fixed bottom-0 left-0 top-16 z-40 hidden w-16 flex-col items-center justify-start space-y-4 bg-white pt-4 shadow-md transition-transform duration-300 ease-in-out dark:bg-zinc-900 sm:flex md:hidden">
	{
		navLinks.map(({ href, label, icon }) => (
			<HeaderLink
				href={href}
				class="group flex flex-col items-center justify-center p-2 hover:bg-gray-100 dark:hover:bg-zinc-800">
				<Icon
					name={icon}
					class="mb-1 h-6 w-6 text-gray-500 group-hover:text-blue-600 dark:text-gray-400 dark:group-hover:text-blue-500"
				/>
				<span class="text-xs text-gray-500 group-hover:text-blue-600 dark:text-gray-400 dark:group-hover:text-blue-500">
					{label}
				</span>
			</HeaderLink>
		))
	}
</nav>

<!-- Mobile Bottom Navigation -->
<nav
	class="fixed bottom-0 left-0 z-50 h-16 w-full border-t border-gray-200 bg-white dark:border-gray-600 dark:bg-zinc-900 sm:hidden">
	<div class="mx-auto grid h-full max-w-lg grid-cols-3">
		{
			navLinks.map(({ href, label, icon }) => (
				<HeaderLink
					href={href}
					class="group inline-flex flex-col items-center justify-center px-5 hover:bg-gray-50 dark:hover:bg-zinc-800">
					<Icon
						name={icon}
						class="mb-1 h-6 w-6 text-gray-500 group-hover:text-blue-600 dark:text-gray-400 dark:group-hover:text-blue-500"
					/>
					<span class="text-xs text-gray-500 group-hover:text-blue-600 dark:text-gray-400 dark:group-hover:text-blue-500">
						{label}
					</span>
				</HeaderLink>
			))
		}
	</div>
</nav>

<script>
	function setupNavigation() {
		const navToggle = document.getElementById('navToggle');
		const navRail = document.getElementById('navRail');
		const mainContent = document.querySelector('main');

		function toggleNavRail() {
			navRail?.classList.toggle('-translate-x-full');
			mainContent?.classList.toggle('sm:pl-16');
			mainContent?.classList.toggle('sm:pl-0');
		}

		navToggle?.addEventListener('click', toggleNavRail);

		// Check if we're on a secondary page and hide the rail if necessary
		if (document.body.classList.contains('secondary-page')) {
			navRail?.classList.add('-translate-x-full');
			mainContent?.classList.remove('sm:pl-16');
			mainContent?.classList.add('sm:pl-0');
		}
	}

	// Run the setup on initial load
	setupNavigation();

	// Re-run the setup after each navigation
	document.addEventListener('astro:after-swap', setupNavigation);
</script>
