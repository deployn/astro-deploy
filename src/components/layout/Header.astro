---
import { Image } from 'astro:assets';
import { ModeToggle } from '@/components/ModeToggle';
import HeaderLink from './HeaderLink.astro';

import logoImage from '@/assets/images/logo.png';

const navLinks = [
	{ href: '/', label: 'Home' },
	{ href: '/blog/', label: 'Blog' },
	{ href: '/recipes/', label: 'Recipes' },
];

const getThemePreference = () => {
	if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
		return localStorage.getItem('theme');
	}
	return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
};

const setTheme = (document: Document) => {
	const theme = getThemePreference();
	document.documentElement.setAttribute('data-theme', theme ?? '');
	document.documentElement.classList.toggle('dark', theme === 'dark');
};
---

<script define:vars={{ setTheme }} is:inline>
	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList.toggle('dark', isDark);

	if (typeof localStorage !== 'undefined') {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains('dark');
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
		});
		observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
	}

	setTheme(document);

	document.addEventListener('astro:before-swap', (ev) => {
		setTheme(ev.newDocument);
	});
</script>

<header
	x-data="{
		open: false,
		toggleMenu() {
			this.open = !this.open;
		},
		closeMenu() {
			this.open = false;
		}
	}"
	x-init="$watch('open', value => {
		if (window.innerWidth >= 600) closeMenu();
	})"
	class="sticky top-0 z-10 block h-max w-full max-w-full rounded-none border border-white/80 bg-opacity-80 px-4 py-2 text-black shadow-md backdrop-blur-2xl backdrop-saturate-200 dark:border-black/80 dark:bg-zinc-900 lg:px-8 lg:py-4">
	<div class="flex items-center justify-between text-zinc-900 dark:text-zinc-100">
		<a
			href="/"
			class="mr-4 block cursor-pointer py-1.5 font-sans text-base font-semibold leading-relaxed text-inherit antialiased lg:ml-2">
			<div class="flex items-center gap-2 lg:gap-4">
				<Image
					src={logoImage}
					alt="Astro Deploy"
					class="-my-2 size-10 lg:-my-4 lg:size-14"
					loading="eager"
				/>
				Astro Deploy
			</div>
		</a>
		<nav class="hidden items-center space-x-4 sm:flex">
			{
				navLinks.map(({ href, label }) => (
					<HeaderLink
						href={href}
						class="block rounded-lg px-4 py-2 text-center font-sans text-sm leading-normal text-zinc-900 antialiased transition-all hover:bg-zinc-50 dark:text-zinc-100 dark:hover:bg-zinc-950 md:text-xl">
						{label}
					</HeaderLink>
				))
			}
		</nav>
		<div class="flex items-center">
			<button
				@click="toggleMenu"
				class="relative h-10 w-10 text-gray-500 focus:outline-none sm:hidden"
				aria-label="Toggle menu">
				<span
					aria-hidden="true"
					class="absolute left-1/2 top-1/2 block w-5 -translate-x-1/2 -translate-y-1/2 transform">
					<span
						class="absolute block h-0.5 w-5 transform bg-current transition duration-500 ease-in-out"
						:class="{'rotate-45': open, ' -translate-y-1.5': !open }">
					</span>
					<span
						class="absolute block h-0.5 w-5 transform bg-current transition duration-500 ease-in-out"
						:class="{'opacity-0': open }">
					</span>
					<span
						class="absolute block h-0.5 w-5 transform bg-current transition duration-500 ease-in-out"
						:class="{'-rotate-45': open, ' translate-y-1.5': !open}">
					</span>
				</span>
			</button>
			<ModeToggle client:load />
		</div>
	</div>
	<nav
		x-show="open"
		x-transition:enter="transition ease-out duration-200"
		x-transition:enter-start="opacity-0 transform scale-90"
		x-transition:enter-end="opacity-100 transform scale-100"
		x-transition:leave="transition ease-in duration-200"
		x-transition:leave-start="opacity-100 transform scale-100"
		x-transition:leave-end="opacity-0 transform scale-90"
		@click.away="closeMenu"
		class="mt-4 sm:hidden">
		{
			navLinks.map(({ href, label }) => (
				<HeaderLink
					href={href}
					@click="closeMenu"
					class="mb-2 block w-full rounded-lg px-4 py-2 text-left font-sans text-sm leading-normal text-zinc-900 antialiased transition-all hover:bg-zinc-100 dark:text-zinc-100 dark:hover:bg-zinc-700">
					{label}
				</HeaderLink>
			))
		}
	</nav>
</header>
