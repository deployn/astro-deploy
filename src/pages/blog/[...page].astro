---
import { getCollection } from 'astro:content';
import BaseLayout from '@/layouts/BaseLayout.astro';
import Heading from '@/components/ui/Heading.astro';
import Search from '@/components/blog/Search.astro';
import {
	Pagination,
	PaginationContent,
	PaginationItem,
	PaginationLink,
	PaginationNext,
	PaginationPrevious,
} from '@/components/ui/pagination';

interface BlogPost {
	data: {
		title: string;
		description: string;
	};
	slug: string;
}

export async function getStaticPaths({ paginate }: { paginate: Function }) {
	const allBlogposts = await getCollection('blog');
	const postsPerPage = 4;

	return paginate(allBlogposts, {
		pageSize: postsPerPage,
	});
}

const {
	page,
}: {
	page: {
		data: BlogPost[];
		url: { prev: string; current: string; next: string };
		currentPage: number;
		lastPage: number;
	};
} = Astro.props;
---

<BaseLayout
	title="Blog | Astro Deploy"
	description="Explore insightful articles on our Blog: Dive into a world of knowledge through posts crafted with expertise. Discover, learn, and grow with us.">
	<div class="container mx-auto px-4 py-16 sm:py-24 lg:px-8 lg:py-32 xl:max-w-7xl">
		<div class="mb-12 text-center text-zinc-900 dark:text-zinc-200">
			<Heading level={1}>Blog</Heading>
			<Search />
			<p>Here are some blogposts, they are located in the repository as mdx files.</p>
		</div>
		<hr class="mb-12 dark:border-zinc-700/75" />
		<div class="grid grid-cols-1 gap-8 md:grid-cols-2">
			{
				page.data.map((post) => (
					<div class="flex flex-col space-y-4">
						<h2
							transition:name={post.data.title}
							class="text-lg font-semibold text-zinc-800 hover:text-zinc-600 dark:text-zinc-200 dark:hover:text-zinc-400 sm:text-xl">
							<a href={`/blog/${post.slug}/`}>{post.data.title}</a>
						</h2>
						<p class="text-sm leading-relaxed text-zinc-600 dark:text-zinc-400">
							{post.data.description}
						</p>
						<a
							class="text-sm font-medium text-primary-600 hover:text-primary-400 dark:text-primary-400 dark:hover:text-primary-300"
							href={`/blog/${post.slug}/`}>
							Read more
						</a>
					</div>
				))
			}
		</div>
		<div class="mt-12 text-black dark:text-white">
			<Pagination>
				<PaginationContent>
					{
						page.currentPage > 1 && (
							<>
								<PaginationItem>
									<PaginationPrevious href={page.url.prev} />
								</PaginationItem>
								<PaginationItem>
									<PaginationLink href="/blog/">1</PaginationLink>
								</PaginationItem>
							</>
						)
					}
					<PaginationItem>
						<PaginationLink href={page.url.current} isActive>{page.currentPage} </PaginationLink>
					</PaginationItem>
					{
						page.currentPage < page.lastPage && (
							<>
								<PaginationItem>
									<PaginationLink href={`/blog/${page.lastPage}`}>{page.lastPage}</PaginationLink>
								</PaginationItem>
								<PaginationItem>
									<PaginationNext href={page.url.next} />
								</PaginationItem>
							</>
						)
					}
				</PaginationContent>
			</Pagination>
		</div>
	</div>
</BaseLayout>
